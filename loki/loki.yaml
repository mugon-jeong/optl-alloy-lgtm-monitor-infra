# 멀티 테넌시를 비활성화하여 모든 로그 스트림에 대해 단일 테넌트를 보장합니다.
auth_enabled: false

# Loki 서버에 대한 설정 블록입니다.
server:
  http_listen_port: 3100  # 모든 수신 트래픽에 대해 포트 3100에서 수신 대기합니다.
  log_level: info         # 로그 레벨을 info로 설정합니다.

# limits 설정 블록은 기본 글로벌 및 테넌트별 제한을 설정할 수 있습니다(이를 override 블록에서 변경할 수 있습니다).
# 이 경우, 볼륨 사용이 전역적으로 활성화됩니다(테넌트가 하나이기 때문입니다).
# 이는 Grafana의 Logs Explorer 앱에서 사용됩니다.
#limits_config:
#  volume_enabled: true

# common 블록은 Loki를 구성하는 모든 구성 요소에 대한 옵션을 설정하는 데 사용됩니다.
# 이는 각 구성 요소의 특정 설정 블록을 사용하여 재정의할 수 있습니다.
common:
  path_prefix: /loki  # Loki에서 사용하는 일반적인 경로 접두사
  replication_factor: 1  # 복제 요소 수: Loki 인스턴스 간 데이터 복제 수
  ring:
    instance_addr: 127.0.0.1  # Loki 인스턴스 주소
    kvstore:
      store: inmemory  # 키-값 저장소: 메모리 기반
  storage:
    s3:
      endpoint: 172.30.1.114:9123
      insecure: true
      bucketnames: loki
      access_key_id: xUXmiT4jfl8UBy6YRh43
      secret_access_key: x2Xr6p4dVKoH61CBjpZiIe8NcIAaYOLWO6cZj5uj
      s3forcepathstyle: true

# schema_config 블록은 Loki가 로그 데이터를 저장하는 데 사용하는 스키마를 구성하는 데 사용됩니다.
# Loki는 특정 시간 기간에 따라 여러 스키마를 사용할 수 있습니다. 이는 스키마 변경에 대한 하위 호환성을 허용합니다.
schema_config:
  configs:
    - from: "2024-06-01"
      index:
        period: 24h
        prefix: index_
      object_store: s3
      schema: v13
      store: tsdb

#query_scheduler:
#  max_outstanding_requests_per_tenant: 2048  # 테넌트 당 최대 대기 중인 요청 수

storage_config:
  tsdb_shipper:
    active_index_directory: /loki/index
    cache_location: /loki/index_cache

compactor:
  compaction_interval: 1m
  retention_delete_worker_count: 500
  working_directory: /tmp/compactor

ruler:
  storage:
    s3:
      bucketnames: loki-ruler

# 보고를 비활성화하려면, 다음 줄의 주석 처리를 해제하십시오:
analytics:
  reporting_enabled: false
